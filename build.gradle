plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'


project.ext.mainClassName = "com.backinfile.excelToCode.Launcher"

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'

    implementation 'com.github.backinfile:support:v1.0.2'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'


    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.31'
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.78'

    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'
}

test {
    useJUnitPlatform()
}

task dist(type: Jar) {
    archiveFileName = project.name + ".jar"
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}